import 'package:bloc/bloc.dart';
import 'package:rxdart/rxdart.dart';

/// Skips the first [count] events.
///
/// ### Example
///     on<ExampleEvent>(
///       _handleEvent,
///       transformer: skip(10),
///     )
//* –ü—Ä–∏–º–µ—Ä –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ https://rxmarbles.com/#skip
EventTransformer<Event> skip<Event>(int count) {
  return (events, mapper) => events.skip(count).switchMap(mapper);
}

/// The `delay()` transformer is pausing adding events for a particular
/// increment of time (that you specify) before emitting each of the events.
/// This has the effect of shifting the entire sequence of
/// events added to the bloc forward in time by that specified increment.
///
/// [Interactive marble diagram](http://rxmarbles.com/#delay)
///
/// ### Example
///     on<ExampleEvent>(
///       _handleEvent,
///       transformer: delay(const Duration(seconds: 1)),
///     );
//* –ü—Ä–∏–º–µ—Ä –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ https://rxmarbles.com/#delay
EventTransformer<Event> delay<Event>(Duration duration) {
  return (events, mapper) => events.delay(duration).switchMap(mapper);
}

/// Emits an [Event], then ignores subsequent events
/// for a [duration], then repeats this process.
///
/// If [leading] is true, then the first event in each window is emitted.
/// If [trailing] is true, then the last event is emitted instead.
///
/// ### Example
///     on<ExampleEvent>(
///       _handler,
///       transformer: throttle(const Duration(seconds: 5))
///     );
//* –ü—Ä–∏–º–µ—Ä –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ https://rxmarbles.com/#throttleTime
EventTransformer<Event> throttleTransformer<Event>(Duration duration) {
  return (events, mapper) => events.throttleTime(duration).switchMap(mapper);
}

/// Event transformer that will only emit items from the source
/// sequence whenever the time span defined by [duration] passes, without the
/// source sequence emitting another item.
///
/// This time span start after the last debounced event was emitted.
///
/// debounce filters out items obtained events that are
/// rapidly followed by another emitted event.
///
/// [Interactive marble diagram](http://rxmarbles.com/#debounceTime)
///
/// ### Example
///     on<ExampleEvent>(
///       _handleEvent,
///       transformer: debounce(const Duration(seconds: 1)),
///     );
//* –ü—Ä–∏–º–µ—Ä –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ https://rxmarbles.com/#debounceTime
EventTransformer<Event> debounceTransformer<Event>(Duration duration) {
  return (events, mapper) => events.debounceTime(duration).switchMap(mapper);
}

//! –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –ø–æ –¥–∞–Ω–Ω—ã–º –¥–≤—É–º –º–µ—Ç–æ–¥–∞–º => Throttle && Debounce
///
/// –í –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Å–æ–±—ã—Ç–∏—è–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∫—Ä–æ–ª–ª–æ–º –∏–ª–∏ –≤–≤–æ–¥–æ–º —Ç–µ–∫—Å—Ç–∞),
/// throttle –∏ debounce ‚Äî —ç—Ç–æ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–∞ –∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—é —á–∞—Å—Ç–æ—Ç—ã –≤—ã–∑–æ–≤–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π.
///
/// –ö–æ–≥–¥–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
/// Throttle ‚Äî –∫–æ–≥–¥–∞ –≤–∞–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –≤—ã–∑–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ).
///
/// Debounce ‚Äî –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∂–¥–∞—Ç—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∏—Å–∫ –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–≤–æ–¥–∞).
///
/// –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π, –º–æ–≥—É –ø–æ–º–æ—á—å –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥! üöÄ
///
//* 1. Throttle (—Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥)
/// Throttle –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –Ω–µ —á–∞—â–µ, —á–µ–º —Ä–∞–∑ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏, –¥–∞–∂–µ –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —á–∞—â–µ.
///
//* –ü—Ä–∏–º–µ—Ä –Ω–∞ Dart:
/// Function _throttle(Function func, Duration duration) {
///   Timer? timer;
///   bool isThrottled = false;
///
///   return () {
///     if (!isThrottled) {
///       isThrottled = true;
///       timer = Timer(duration, () => isThrottled = false);
///       func();
///     }
///   };
/// }
///
/// void main() {
///   final throttledPrint = _throttle(() => print("Throttled!"), Duration(seconds: 1));
///
///   // –°–∏–º—É–ª–∏—Ä—É–µ–º —á–∞—Å—Ç—ã–µ –≤—ã–∑–æ–≤—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∫—Ä–æ–ª–ª)
///   for (int i = 0; i < 10; i++) {
///     throttledPrint(); // –í—ã–∑–æ–≤–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É
///   }
/// }
/// –í—ã–≤–æ–¥:
/// Throttled!
/// (–∏ –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ, –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–π–¥—ë—Ç 1 —Å–µ–∫—É–Ω–¥–∞)

//* 2. Debounce (–¥–µ–±–∞—É–Ω—Å)
/// Debounce –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ—Ç –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–π–¥—ë—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –±–µ–∑ –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π.
///
//* –ü—Ä–∏–º–µ—Ä –Ω–∞ Dart:
///Function _debounce(Function func, Duration duration) {
///  Timer? timer;
///
///  return () {
///    timer?.cancel(); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
///    timer = Timer(duration, () => func());
///  };
///}
///
///void main() {
///  final debouncedPrint = _debounce(() => print("Debounced!"), Duration(seconds: 1));
///
///  // –°–∏–º—É–ª–∏—Ä—É–µ–º —á–∞—Å—Ç—ã–µ —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞)
///  for (int i = 0; i < 5; i++) {
///    debouncedPrint();
///    await Future.delayed(Duration(milliseconds: 500)); // –ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 0.5 —Å–µ–∫
///  }
///
///  // –ñ–¥—ë–º 1 —Å–µ–∫—É–Ω–¥—É –±–µ–∑ —Å–æ–±—ã—Ç–∏–π
///  await Future.delayed(Duration(seconds: 1));
///  debouncedPrint(); // –í—ã–∑–æ–≤–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç
/// }
/// –í—ã–≤–æ–¥:
/// Copy
/// Debounced!
/// (—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–∞—É–∑—ã –≤ 1 —Å–µ–∫—É–Ω–¥—É)

/*
–ö–ª—é—á–µ–≤—ã–µ –æ—Ç–ª–∏—á–∏—è:

–ü–∞—Ä–∞–º–µ—Ç—Ä	            Throttle	                    Debounce
--------              ------------------------      ------------------------------
–í—ã–∑–æ–≤	                –†–∞–∑ –≤ N –≤—Ä–µ–º–µ–Ω–∏	              –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–∞—É–∑—ã –≤ N –≤—Ä–µ–º–µ–Ω–∏
–ü—Ä–∏–º–µ—Ä	              –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —á–∞—Å—Ç—ã–µ —Å–æ–±—ã—Ç–∏—è	    –ñ–¥—ë—Ç –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ	        –°–∫—Ä–æ–ª–ª, —Ä–µ—Å–∞–π–∑	              –ü–æ–∏—Å–∫ –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞
*/
